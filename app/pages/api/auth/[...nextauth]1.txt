import NextAuth from 'next-auth'
import Providers from "next-auth/react";
import CredentialProvider from "next-auth/providers/credentials";
import axios from 'axios'
import {PrismaClient} from '@prisma/client'
const prisma = new PrismaClient();

export default NextAuth({
  providers: [
    CredentialProvider({
      name: "ATLAS SCHOOL",
      credentials: {
        id: { label: "id",type: "text", placeholder: "a1",},
        email: { label: "Email", type: "text", placeholder: "abdelaziz.bakir@outlook.fr" },
      },
      authorize: async (credentials) => {
      // database look up
        const user = await axios.post(prisma.user.findMany,
        {
          user: {
            id: credentials.id,
            email: credentials.email
          }
        })
      if (user) {
        return user
        credentials.id === user.id &&
        credentials.email === user.email
      } {
          return {
            name: "elhadj",
            email: "abz@test.com",
          };
        }
      // login failed
        return null;
      },
    }),
  ],
  callbacks: {
    jwt: ({ token, user }) => {
      // first time jwt callback is run, user object is available
      if (user) {
        token.id = user.id;
      }

      return token;
    },
    session: ({ session, token }) => {
      if (token) {
        session.id = token.id;
      }
      return session;
    },
  },
});